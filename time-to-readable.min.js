/** Convert content of element with "data-ago" attribute (value = UNIX milliseconds), into readable format. */
function timeDifference(target, current = new Date()) {
    const msPerMinute = 60 * 1000;
    const msPerHour = msPerMinute * 60;
    const msPerDay = msPerHour * 24;
    const msPerMonth = msPerDay * 30;
    const msPerYear = msPerDay * 365;
    const elapsed = target - current.getTime();
    let nume = 0;
    let unit = "seconds";

    if (elapsed > 0) {
        if (elapsed < msPerMinute) {
            nume = Math.round(elapsed / 1000);
            unit = "second";
        } else if (elapsed < msPerHour) {
            nume = Math.round(elapsed / msPerMinute);
            unit = "minute";
        } else if (elapsed < msPerDay) {
            nume = Math.round(elapsed / msPerHour);
            unit = "hour";
        } else if (elapsed < msPerMonth) {
            nume = Math.round(elapsed / msPerDay);
            unit = "day";
        } else if (elapsed < msPerYear) {
            nume = Math.round(elapsed / msPerMonth);
            unit = "month";
        } else {
            nume = Math.round(elapsed / msPerYear);
            unit = "year";
        }
    } else {
        if (elapsed > -1 * msPerMinute) {
            nume = Math.round(elapsed / 1000);
            unit = "second";
        } else if (elapsed > -1 * msPerHour) {
            nume = Math.round(elapsed / msPerMinute);
            unit = "minute";
        } else if (elapsed > -1 * msPerDay) {
            nume = Math.round(elapsed / msPerHour);
            unit = "hour";
        } else if (elapsed > -1 * msPerMonth) {
            nume = Math.round(elapsed / msPerDay);
            unit = "day";
        } else if (elapsed > -1 * msPerYear) {
            nume = Math.round(elapsed / msPerMonth);
            unit = "month";
        } else {
            nume = Math.round(elapsed / msPerYear);
            unit = "year";
        }
    }
    const rtf = new Intl.RelativeTimeFormat();
    return rtf.format(nume, unit);
}
const elements = document.querySelectorAll("[data-ago]");
elements.forEach(function (element, index) {
    const timeAgo = timeDifference(parseInt(element.getAttribute("data-ago")));
    element.innerHTML = timeAgo;
});
